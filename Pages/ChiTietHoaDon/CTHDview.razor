@page "/cthd"
@inject ApplicationDbContext DBcontextcthd
@inject NavigationManager Navigation

<h3>Danh Sách Chi Tiết Hoá Đơn</h3>

<button class="btn btn-success" @onclick="NavigateToAddProduct">Thêm Hoá Đơn</button>

@if (chiTHDs == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>IDHD</th>
                <th>IDSP</th>
                <th>SoLuong</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cthd in chiTHDs)
            {
                <tr>
                    <td>@cthd.IDHD</td>
                    <td>@cthd.IDSP</td>
                    <td>@cthd.SoLuong</td>

                    <td>
                        <button class="btn btn-primary" @onclick="() => EditProduct(cthd.IDHD)">Sửa</button>
                        <button class="btn btn-danger" @onclick="() => DeleteProduct(cthd.IDHD)">Xóa</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<CTHD> chiTHDs;

    protected override async Task OnInitializedAsync()
    {
        chiTHDs = await DBcontextcthd.CTHDs.ToListAsync();
    }

    private void EditProduct(int id)
    {
        Navigation.NavigateTo($"/edit/{id}");
    }

    private async Task DeleteProduct(int id)
    {
        var product = await DBcontextcthd.CTHDs.FindAsync(id);
        if (product != null)
        {
            DBcontextcthd.CTHDs.Remove(product);
            await DBcontextcthd.SaveChangesAsync();
            chiTHDs = await DBcontextcthd.CTHDs.ToListAsync();
        }
    }

    private void NavigateToAddProduct()
    {
        Navigation.NavigateTo("/add");
    }
}